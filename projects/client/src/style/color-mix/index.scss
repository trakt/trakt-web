/*
  color-mix usages are placed here to deal with backwards compatibility.

  Following solutions were decided against:
  - PostCSS plugin: can not deal with variables in color-mix.
  - Fallback colors: fallbacks were not used, since variable usage in color-mix
    did not mark it as an invalid property value.

  FIXME: (DX) disallow/warn color-mix usage outside of this file.
*/

@use "sass:math";

$cm-foreground-percentages: 10, 30, 50;
$cm-background-percentages: 15, 25, 30, 48, 50, 57, 62, 75, 70, 80, 88, 90, 95;
$cm-shadow-percentages: 1, 2, 4, 6, 7, 8, 10, 12, 14, 16, 18, 25, 29, 30, 32, 43, 45, 62, 86, 90;
$cm-background-navbar-percentages: 80, 90;

:root {
  --cm-background-cover-tag: color-mix(in srgb,
      var(--shade-700) 75%,
      transparent);

  --cm-background-now-playing: color-mix(in srgb, var(--color-toast-background-base) 70%, transparent 30%);

  --cm-inactive-gesture: color-mix(in srgb,
      var(--color-foreground) 35%,
      var(--color-background));

  --cm-background-list-summary: color-mix(in srgb,
      var(--color-card-background) 40%,
      var(--color-background));

  --cm-background-official-list-summary: color-mix(in srgb,
      var(--color-official-list-background) 40%,
      var(--color-background));

  --cm-background-cookie-notice: color-mix(in srgb,
      var(--color-cookie-background) 70%,
      transparent 30%);

  --cm-background-search-input: color-mix(in srgb,
      var(--color-background-navbar) 75%,
      transparent 25%);

  --cm-gradient-stop-cta-dark: color-mix(in srgb,
      var(--purple-500) 80%,
      transparent);
  --cm-gradient-stop-cta-light: color-mix(in srgb,
      var(--purple-300) 80%,
      transparent);


  @each $percent in $cm-foreground-percentages {
    --cm-foreground-#{$percent}: color-mix(in srgb,
      #{'var(--color-foreground) ' + $percent + '%'},
      transparent);
  }

  @each $percent in $cm-background-percentages {
    --cm-background-#{$percent}: color-mix(in srgb,
      #{'var(--color-background) ' + $percent + '%'},
      transparent);
  }

  @each $percent in $cm-shadow-percentages {
    --cm-shadow-#{$percent}: color-mix(in srgb,
      #{'var(--color-shadow) ' + $percent + '%'},
      transparent);
  }

  @each $percent in $cm-background-navbar-percentages {
    --cm-background-navbar-#{$percent}: color-mix(in srgb,
      #{'var(--color-background-navbar-base) ' + $percent + '%'},
      transparent);
  }
}

// FIXME add support for light mode
@supports not (color: color-mix(in srgb, #000 50%, transparent)) {
  :root {
    --cm-background-cover-tag: rgba(78, 87, 93, 0.75);
    --cm-background-now-playing: rgba(46, 51, 55, 0.7);
    --cm-inactive-gesture: rgb(101, 103, 104);
    --cm-background-list-summary: rgb(25, 27, 29);
    --cm-background-official-list-summary: rgb(46, 27, 57);
    --cm-background-cookie-notice: rgba(32, 36, 38, 0.7);
    --cm-background-search-input: rgba(25, 27, 29, 0.6);
    --cm-gradient-stop-cta-dark: rgba(159, 66, 198, 0.8);
    --cm-gradient-stop-cta-light: var(var(--cm-gradient-stop-cta-dark));

    @each $percent in $cm-foreground-percentages {
      --cm-foreground-#{$percent}: rgba(254, 254, 254, #{math.div($percent, 100)});
    }

    @each $percent in $cm-background-percentages {
      --cm-background-#{$percent}: rgba(19, 21, 23, #{math.div($percent, 100)});
    }

    @each $percent in $cm-shadow-percentages {
      --cm-shadow-#{$percent}: rgba(19, 21, 23, #{math.div($percent, 100)});
    }

    @each $percent in $cm-background-navbar-percentages {
      --cm-background-navbar-#{$percent}: rgba(33, 36, 39, #{math.div($percent, 100)});
    }
  }
}
